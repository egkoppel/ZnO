#ifndef _STRUCT_TYPE_H
#define _STRUCT_TYPE_H

#include "type.hpp"
#include <llvm/IR/Type.h>

namespace AST {
	class StructType: public TypeBase {
		public:
		StructType(std::string name, std::map<std::string, AST::field_type_t> fields) : TypeBase(name, std::move(fields)), generated() {}
	};
}

namespace Parser {
	std::shared_ptr<AST::TypeBase> parse_struct_def(FILE* f);
}

#endif
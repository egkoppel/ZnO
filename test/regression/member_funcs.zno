uses 'stdio.zno'

struct Thingy {
	a: _fundamentals::i32,
	b: _fundamentals::i32,
	c: () -> _fundamentals::void,
	pf: (_fundamentals::ptr<_fundamentals::i8>, ...) -> _fundamentals::void,

	func printB() {
		stdio::printI(5);
	},

	func printC() {
		stdio::printI(6);
	},

	func printA(self) {
		stdio::printI((*self).a);
	}
}

struct ThingyContainer {
	thingy: _fundamentals::ptr<Thingy>
}

extension Thingy {
	func printANumber(self) {
		stdio::printI(63729);
	}
}

func print3 () {
	stdio::printI(3);
}

func main() {
	let s: Thingy[5];

	s[0]::printB();
	Thingy::printC();
	s[0].a = 1;
	s[0].printA();
	s[0].c = print3;
	s[0].c();
	s[0].printANumber();
	let p: (_fundamentals::i32) -> _fundamentals::void = stdio::printI;
	p(1);
}

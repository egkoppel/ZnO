name: Build and test
on:
  push:
  pull_request:
    types: [opened, reopened]

jobs:
  Build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install fmt llvm make pkg-config
      - name: Build executable
        run: |
          cd znoc
          LLVM_CONFIG=`brew --prefix llvm`/bin/llvm-config CC=clang CXX=clang++ gmake
      - name: Build tests
        run: |
          cd znoc
          LLVM_CONFIG=`brew --prefix llvm`/bin/llvm-config CC=clang CXX=clang++ gmake test
      - name: Archive executable
        run: |
          cd znoc/build
          tar -cf znoc-macos.tar znoc
      - name: Archive tests
        run: |
          cd znoc/test/unit/build
          tar -cf znoc-macos-tests.tar znoc-test-numeric_literal
      - name: Upload built executable
        uses: actions/upload-artifact@v2
        with:
          name: znoc-macos.tar
          path: znoc/build/znoc-macos.tar
      - name: Upload built tests
        uses: actions/upload-artifact@v2
        with:
          name: znoc-macos-tests.tar
          path: znoc/test/unit/build/znoc-macos-tests.tar
          retention-days: 1

  Build_Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libfmt-dev llvm
      - name: Build executable
        run: |
          cd znoc
          CC=clang CXX=clang++ make
      - name: Build tests
        run: |
          cd znoc
          CC=clang CXX=clang++ make test
      - name: Archive executable
        run: |
          cd znoc/build
          tar -cf znoc-linux.tar znoc
      - name: Archive tests
        run: |
          cd znoc/test/unit/build
          tar -cf znoc-linux-tests.tar znoc-test-numeric_literal
      - name: Upload built executable
        uses: actions/upload-artifact@v2
        with:
          name: znoc-linux.tar
          path: znoc/build/znoc-linux.tar
      - name: Upload built tests
        uses: actions/upload-artifact@v2
        with:
          name: znoc-linux-tests.tar
          path: znoc/test/unit/build/znoc-linux-tests.tar
          retention-days: 1
  
  Build_Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-llvm mingw-w64-x86_64-clang mingw-w64-x86_64-fmt
      - name: Build executable
        run: |
          cd znoc
          CC=clang CXX=clang++ mingw32-make
      - name: Upload built executable
        uses: actions/upload-artifact@v2
        with:
          name: znoc-windows
          path: znoc/build/znoc.exe
      - name: Upload built objects
        uses: actions/upload-artifact@v2
        with:
          name: znoc-windows-obj
          path: znoc/build/**/*.o
          retention-days: 1


  Test_macos:
    runs-on: macos-latest
    needs: Build_macos
    steps:
      - name: Download tests
        uses: actions/download-artifact@v2
        with:
          name: znoc-macos-tests.tar
          if-no-files-found: error
      - name: Extract tests
        run: |
          tar -xf znoc-macos-tests.tar
      - name: Install dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install fmt llvm
      - name: Run test executable
        run: |
          ./znoc-test-numeric_literal --gtest_output="xml:out.xml"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: znoc-macos-test-results
          path: out.xml
          retention-days: 1

  Publish_tests:
    runs-on: ubuntu-latest
    needs: [Test_macos]
    if: always()
    steps:
      - name: Download test results
        uses: actions/download-artifact@v2
        with:
          name: znoc-macos-test-results
          if-no-files-found: error
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: out.xml
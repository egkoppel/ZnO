name: Build and test
on:
  push:
  pull_request:
    types: [opened, reopened]

jobs:
  Build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install fmt llvm
      - name: Build executable
        run: |
          export PATH="/usr/local/opt/llvm/bin:$PATH"
          export C_INCLUDE_PATH="/usr/local/include:$C_INCLUDE_PATH"
          export CPLUS_INCLUDE_PATH="/usr/local/include:$CPLUS_INCLUDE_PATH"
          export LIBRARY_PATH="/usr/local/lib:$LIBRARY_PATH"
          cd znoc
          CC=clang CXX=clang++ make
      - name: Upload built executable
        uses: actions/upload-artifact@v2
        with:
          name: znoc-macos
          path: znoc/build/znoc
      - name: Upload built objects
        uses: actions/upload-artifact@v2
        with:
          name: znoc-macos-obj
          path: znoc/build/**/*.o
          retention-days: 1

  Build_Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install libfmt-dev llvm
      - name: Build executable
        run: |
          cd znoc
          CC=clang CXX=clang++ make
      - name: Upload built executable
        uses: actions/upload-artifact@v2
        with:
          name: znoc-linux
          path: znoc/build/znoc
      - name: Upload built objects
        uses: actions/upload-artifact@v2
        with:
          name: znoc-linux-obj
          path: znoc/build/**/*.o
          retention-days: 1
  
  Build_Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-llvm mingw-w64-x86_64-clang mingw-w64-x86_64-fmt
      - name: Build executable
        run: |
          cd znoc
          CC=clang CXX=clang++ mingw32-make
      - name: Upload built executable
        uses: actions/upload-artifact@v2
        with:
          name: znoc-windows
          path: znoc/build/znoc.exe
      - name: Upload built objects
        uses: actions/upload-artifact@v2
        with:
          name: znoc-windows-obj
          path: znoc/build/**/*.o
          retention-days: 1


  Test_macos:
    runs-on: macos-latest
    needs: Build_macos
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Download built object code
        uses: actions/download-artifact@v2
        with:
          name: znoc-macos-obj
          path: znoc/build/
          if-no-files-found: error
      - name: Install dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install fmt llvm cmake
      - name: Build googletest
        run: |
          cd znoc/test/unit
          mkdir -p build
          cd build
          cmake ../gtest
          make
      - name: Build and run test executable
        run: |
          export PATH="/usr/local/opt/llvm/bin:$PATH"
          export C_INCLUDE_PATH="/usr/local/include:$C_INCLUDE_PATH"
          export CPLUS_INCLUDE_PATH="/usr/local/include:$CPLUS_INCLUDE_PATH"
          export LIBRARY_PATH="/usr/local/lib:$LIBRARY_PATH"
          cd znoc/test/unit
          clang++ -Igtest/googletest/include -I../../src numeric_literal.cpp ../../build/attributes.o ../../build/casting.o ../../build/constructions/binary_op.o ../../build/constructions/struct_init.o ../../build/constructions/break_continue.o ../../build/constructions/codeblock.o ../../build/constructions/expression.o ../../build/constructions/fallthrough.o ../../build/constructions/function_call.o ../../build/constructions/function_def.o ../../build/constructions/string.o ../../build/constructions/if.o ../../build/constructions/namespace.o ../../build/constructions/numeric_literal.o ../../build/constructions/reference.o ../../build/constructions/return.o ../../build/constructions/switch.o ../../build/constructions/typedef.o ../../build/constructions/unary_op.o ../../build/constructions/while.o ../../build/llvm_module.o ../../build/location.o ../../build/mangling.o ../../build/memory/gep.o ../../build/memory/memory_location.o ../../build/memory/variable.o ../../build/parsing.o ../../build/types/builtins.o ../../build/types/casting.o ../../build/types/type.o  -Lbuild/lib/ -lgtest_main -lgtest -o build/znoc-test --std=c++20 `llvm-config --cppflags | sed 's/-I/-isystem /g'` `llvm-config --ldflags --libs core native` -lfmt
          ./build/znoc-test --gtest_output="xml:build/out.xml"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: znoc-macos-tests
          path: znoc/test/unit/build/out.xml
          retention-days: 1

  Publish_tests:
    runs-on: ubuntu-latest
    needs: [Test_macos]
    if: always()
    steps:
      - name: Download built object code
        uses: actions/download-artifact@v2
        with:
          name: znoc-macos-tests
          if-no-files-found: error
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: out.xml